@model IEnumerable<Traffic>

@{
	ViewData["Title"] = "List";
	ViewData["Navbar"] = true;
	ViewData["css"] = "/css/List.css";

}
<div class="container-fluid" style="margin-top: 1vh;">
	<!--это добавление отступа в 1 процент-->
	<div class="row">
		<div class="col-md-3">
			<div class="container-fluid"
				 style="
                            margin-top: 20px;
                            margin-left: 5px;
                            padding:15px;
                            background-color: #FEFEFE;
                            border-radius: 15px;
                            height: 85vh;
							">
				<div class="row">
					<div class="col-md-12">
						<img src="../Picture/LogoCursWork.png"
							 class="mb-4"
							 style="width: 100%" />
						<div class="d-grid gap-2">
							<button type="button" class="btn btn-secondary " onclick="onFilterType(0)">Отсутствующие</button>
							<button type="button" class="btn btn-secondary mt-3" onclick="onFilterType(1)">Присутствующие</button>
							<button type="button" class="btn btn-secondary mt-3" onclick="onFilterType(2)">Болеющие</button>
							<button type="button" class="btn btn-secondary mt-3 mb-5" onclick="onFilterType(3)">Уважительная причина</button>
							<button type="button" class="btn btn-danger mt-5 col-sm-6 offset-sm-3" onclick="onFilterType(-1)">Показать всех</button>
						</div><!-- Содержимое левого контейнера -->
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-9">
			<div class="container-fluid"
				 style="
                            margin-top: 20px;
                            padding:15px;
                            background-color: #FEFEFEA0;
                            border-radius: 15px;
                            height: 85vh;
							">
				<div class="row">
					<div class="d-flex col-md-12">
						<button type="button" class="me-3 btn btn-primary" data-bs-toggle="modal" data-bs-target="#lessonModal">
							<svg xmlns="http://www.w3.org/2000/svg"
								 width="20"
								 height="26"
								 fill="currentColor"
								 class="bi bi-calendar-week"
								 viewBox="0 0 16 16">

								<path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-5 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5z" />
								<path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z" />
							</svg>
						</button>

						<!-- Модальное окно -->
						<div class="modal fade" id="lessonModal" tabindex="-1" aria-labelledby="lessonModalLabel" aria-hidden="true">
							<div class="modal-dialog">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="lessonModalLabel">Выберите дату и номер пары</h5>
										<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
									</div>
									<input type="text" id="datepicker" placeholder="Выберите дату">

									<div class="modal-body">
										<div id="calendar"></div>
										<div class="mt-3">
											<label for="lessonNumber">Выберите номер пары:</label>
											<select id="lessonNumber" class="form-select">
												<option value="1">Пара 1</option>
												<option value="2">Пара 2</option>
												<option value="3">Пара 3</option>
												<option value="4">Пара 4</option>
												<option value="5">Пара 5</option>
												<option value="6">Пара 6</option>
											</select>
										</div>
									</div>
									<div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
										<button type="button" class="btn btn-primary" id="saveSelection" onclick="siteData()">Сохранить выбор</button>
									</div>
								</div>
							</div>
						</div>

						<div class="me-4 d-flex col-sm-6">
							<input class="form-control me-1" id="searchInput" type="search" placeholder="Поиск" aria-label="Search" oninput="onFilterText()">
							<button class="btn btn-outline-secondary" type="submit">
								<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
									<path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
								</svg>
							</button>
						</div>
						<button type="button" class="me-3 btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#AddUserModal">+ Участник группы</button>
						<!-- Модальное окно -->
						<div class="modal fade" id="AddUserModal" tabindex="-1" aria-labelledby="lessonModalLabel" aria-hidden="true">
							<div class="modal-dialog">
								<form class="modal-content" method="post" action="/List/New">
									<div class="modal-header">
										<h5 class="modal-title" id="lessonModalLabel">+ Учасник группы</h5>
										<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
									</div>
									<div class="modal-body">
										<label for="FirstName" class="form-label">Имя:</label><br>
										<input id="FirstName" name="FirstName" class="form-textarea input_text" required>

									</div>
									<div class="modal-body">
										<label for="LastName" class="form-label">Фамилия:</label><br>
										<input id="LastName" name="LastName" class="form-textarea input_text" required>

									</div>
									<div class="modal-body">
										<label for="MiddleName" class="form-label">Отчество:</label><br>
										<input id="MiddleName" name="MiddleName" class="form-textarea input_text">

									</div>
									<div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
										<button type="submit" class="btn btn-primary">Добавить</button>
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>




				<div class="row">
					<div class="d-flex col-md-12 container-big">

						<table class="table mt-3 rounded-row" style="height: 80%">
							<thead>
								<tr>
									<th scope="col" class="text-center">ФИО</th>
									<th scope="col" class="text-center">Отсутствующие</th>
									<th scope="col" class="text-center">Присутствующие</th>
									<th scope="col" class="text-center">Болеющие</th>
									<th scope="col" class="text-center">Уважительная пр.</th>
									<th scope="col" class="text-center">Удалить участника</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var traffic in Model)
								{
									<tr class="traffic">
										<th class="text-center">@traffic.Student.FirstName @traffic.Student.LastName @traffic.Student.MiddleName</th>
										@for (int i = 1; i < 5; i++)
										{
											<td>
												<input class="form-check-input col-sm-11 offset-sm-5"
													   type="checkbox"
													   id="list-@i-@traffic.Id"
													   onchange="onCheckboxChange(this, @i, @traffic.Id)"
												@((TypeTraffic)i == traffic.TypeTraffic ? "checked" : "")>
											</td>
										}
										<td><button type="button" class="text-center btn btn-outline-secondary" onclick="deleteStudent(@traffic.Student.Id)"> - Участник</button></td>

									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/ru.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<script src="/js/List.js"></script>
<script>
	const currentUrl = window.location.href;
	const url = new URL(currentUrl);
	const year = url.searchParams.get('year');
	const month = url.searchParams.get('month');
	const day = url.searchParams.get('day');

	// Устанавливаем текущую дату, если параметр отсутствует
	const currentDate = new Date();
	const initialYear = year ? parseInt(year) : currentDate.getFullYear();
	const initialMonth = month ? parseInt(month) : currentDate.getMonth(); // Месяцы начинаются с 0
	const initialDay = day ? parseInt(day) : currentDate.getDate();

	const initialDate = new Date(initialYear, initialMonth, initialDay); // Создаём дату

	flatpickr("#datepicker", {
		locale: {
			firstDayOfWeek: 1, // Понедельник — первый день недели
			weekdays: {
				shorthand: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
				longhand: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
			},
			months: {
				shorthand: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
				longhand: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
			},
		},
		dateFormat: "d/m/Y", // Формат даты
		defaultDate: initialDate, // Устанавливаем начальную дату

		inline: true, // Постоянное отображение календаря
		onChange: function (selectedDates, dateStr, instance) {
			console.log('Выбранная дата: ' + dateStr);
			const titleElement = document.getElementById('datepicker');
			titleElement.setAttribute('data-date', dateStr);
		}
	});


	const pair = url.searchParams.get('pair');
	if (pair != null) {
		const paraInput = document.getElementById('lessonNumber');
		paraInput.value = pair;
	}
</script>
<style>
	.calendar-container {
		width: 100%;
		max-width: 800px;
		margin: 0 auto;
	}

	#datepicker {
		display: none;
	}

	.flatpickr-calendar {
		width: 90%;
		max-width: 800px;
		left: 50%;
		transform: translateX(-50%);
	}

	.flatpickr-days {
		width: 100%;
	}

	.flatpickr-day {
		text-align: center;
		width: 90%;
		max-width: 15%;
	}

	.dayContainer {
		width: 100%;
		max-width: 100%;
	}
</style>
<script>
	function deleteStudent(id) {
		const isConfirmed = confirm("Вы уверены, что хотите удалить студента?")
		if (!isConfirmed) {
			return;
		}
		const url = "/List/DeleteStudent";
		const data = {
			id: id,
		};

		fetch(url, {
			method: "PUT",
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify(data),
		})
			.then((response) => location.reload())
			.then((data) => location.reload())
			.catch((error) => location.reload());
	}
</script>

